{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/JsonEditor.svelte",
    "../src/SpecieSelector.svelte",
    "../src/Exporter.svelte",
    "../src/EditableTextArea.svelte",
    "../src/EditableObjectList.svelte",
    "../src/EditableTextLine.svelte",
    "../src/EditableTextList.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount, onDestroy, setContext } from \"svelte\";\n  import { getJson } from \"./utils/getJson\";\n  import FamilySelector from \"./FamilySelector.svelte\";\n  import SpecieSelector from \"./SpecieSelector.svelte\";\n  import JsonEditor from \"./JsonEditor.svelte\";\n  import Exporter from \"./Exporter.svelte\";\n  import { json } from \"./stores.js\";\n\n  let selectedFamily = \"\";\n  let selectedSpecie = \"\";\n  let scientific_name = \"\";\n\n  setContext(\"family\", {\n    setFamily: value => {\n      selectedFamily = value;\n      selectedSpecie = \"\";\n      json.set({});\n    }\n  });\n  setContext(\"specie\", {\n    setSpecie: value => {\n      selectedSpecie = value;\n      json.set({});\n    }\n  });\n\n  $: {\n    if (selectedFamily && selectedSpecie) {\n      getJson({ family: selectedFamily, species: selectedSpecie }).then(data =>\n        json.set(data)\n      );\n    }\n  }\n</script>\n\n<style type=\"text/scss\">h1, h2 {\n  color: #424242;\n  padding: 0 1rem; }\n\n.hero {\n  background-color: #ffc107;\n  padding: 1rem; }\n\n.container {\n  padding: 1rem 0 0; }\n\n/*# sourceMappingURL=App.svelte.css.map */</style>\n\n<main>\n  <section class=\"container\">\n    <h1 class=\"h4\">Highly specialized JSON Editor</h1>\n\n    <div class=\"row hero\">\n      <div class=\"col-sm-4\">\n        <FamilySelector />\n        <SpecieSelector {selectedFamily} {selectedSpecie} />\n      </div>\n      <div class=\"col-sm-8\">\n        {#if $json.scientific_name}\n          <h2 class=\"h4\">{$json.scientific_name}</h2>\n        {/if}\n      </div>\n    </div>\n  </section>\n  <section class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <JsonEditor />\n        <Exporter />\n      </div>\n    </div>\n  </section>\n</main>\n",
    "<script>\n  import { setContext } from \"svelte\";\n  import EditableTextArea from \"./EditableTextArea.svelte\";\n  import EditableTextLine from \"./EditableTextLine.svelte\";\n  import EditableTextList from \"./EditableTextList.svelte\";\n  import EditableObjectList from \"./EditableObjectList.svelte\";\n  import { json } from \"./stores.js\";\n\n  const redListOptions = [\n    \"Not evaluated\",\n    \"Data deficient\",\n    \"Least Concern\",\n    \"Near threatened\",\n    \"Vulnerable\",\n    \"Endangered\",\n    \"Critically endangered\",\n    \"Extinct in the wild\",\n    \"Extinct\"\n  ];\n\n  const trendOptions = [\"Increasing\", \"Stable\", \"Decreasing\"];\n\n  const booleanOptions = [\"Yes\", \"No\"];\n\n  const redListSelectors = {\n    habitats_directive: [\"No\", \"IV\"],\n    red_list_EU27: redListOptions,\n    red_list_europe: redListOptions,\n    red_list_mediterranean: redListOptions,\n    EU27_endemic: booleanOptions,\n    red_list_europe_endemic: booleanOptions,\n    trend_europe: trendOptions\n  };\n</script>\n\n<style type=\"text/scss\">.editors {\n  padding: 0 1rem; }\n\n/*# sourceMappingURL=JsonEditor.svelte.css.map */</style>\n\n{#if $json.scientific_name}\n  <div class=\"editors\">\n    <EditableTextLine key=\"scientific_name\" />\n    <EditableTextList key=\"local_names\" />\n    <EditableTextArea key=\"description\" />\n    <EditableTextArea key=\"behaviour\" />\n    <EditableTextArea key=\"habitat\" />\n    <EditableObjectList key=\"size\" selectors={null} />\n    <EditableTextList key=\"similar_species\" />\n    <EditableTextLine key=\"flight_period\" />\n    <EditableObjectList key=\"red_list\" selectors={redListSelectors} />\n  </div>\n{/if}\n",
    "<script>\n  import config from \"./config\";\n  import { getContext } from \"svelte\";\n\n  export let selectedFamily;\n  export let selectedSpecie;\n  let selected;\n\n  let species = [];\n  $: {\n    if (selectedFamily) {\n      species = config.dataTree[selectedFamily];\n    }\n  }\n\n  const { setSpecie } = getContext(\"specie\");\n\n  function handleChange() {\n    setSpecie(selected);\n  }\n</script>\n\n<style>\n  @media only screen and (max-width: 960px) {\n    .select-specie {\n      margin-top: 0.5rem;\n    }\n  }\n</style>\n\n{#if selectedFamily}\n  <div class=\"select select-specie\">\n    <select id=\"species\" bind:value={selected} on:change={handleChange}>\n      <option>VÃ¤lj en art inom {selectedFamily}</option>\n      {#each species as specie}\n        <option \n        selected={specie === selectedSpecie}\n        value={specie}>{specie}</option>\n      {/each}\n    </select>\n  </div>\n{/if}\n",
    "<script>\n  import { json } from \"./stores.js\";\n\n  function updateClipboard(newClip) {\n    navigator.clipboard.writeText(newClip).then(\n      function() {\n        alert(\"JSON was copied to your clipboard\");\n      },\n      function() {\n        alert(\"FAILED\");\n      }\n    );\n  }\n\n  const handleClick = function() {\n    navigator.permissions.query({ name: \"clipboard-write\" }).then(result => {\n      if (result.state == \"granted\" || result.state == \"prompt\") {\n        /* write to the clipboard now */\n        updateClipboard(JSON.stringify($json));\n      }\n    });\n  };\n</script>\n\n<style type=\"text/scss\">div {\n  padding: 2rem 1rem; }\n\n/*# sourceMappingURL=Exporter.svelte.css.map */</style>\n\n{#if $json.scientific_name}\n<div>\n  <button class=\"button-success\" on:click={handleClick}>Get JSON</button>\n</div>\n{/if}\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { json, openField } from \"./stores.js\";\n\n  export let key;\n  export let open = false;\n\n  $: open = $openField === key;\n\n  function getLabel() {\n    return key.replace(\"_\", \" \");\n  }\n\n  function handleChange(key) {\n    $openField = key;\n  }\n</script>\n\n<style type=\"text/scss\">.truncate {\n  display: block;\n  max-width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n  margin-bottom: 0;\n  padding-left: 0; }\n\n.close {\n  padding-left: 0;\n  margin-bottom: 0; }\n\n/*# sourceMappingURL=EditableTextArea.svelte.css.map */</style>\n\n{#if !open}\n  <button\n    class=\"truncate button-primary-text\"\n    on:click={() => handleChange(key)}>\n    <label>{getLabel()}</label>\n    : {$json[key]}\n  </button>\n{:else}\n  <fieldset>\n    <button\n      class=\"truncate button-primary-text\"\n      on:click={() => ($openField = null)}>\n      <label for={`input_text_${key}`}>{key}</label>\n    </button>\n    <textarea id={`input_text_${key}`} name={key} class=\"\" rows={12}>\n      {$json[key]}\n    </textarea>\n    <button\n      class=\"close button-primary-text\"\n      on:click={() => ($openField = null)}>\n      Close\n    </button>\n  </fieldset>\n{/if}\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { json, openField } from \"./stores.js\";\n  \n  export let key;\n  export let open = false;\n  export let selectors;\n  let selectedValue = {};\n\n  $: open = $openField === key;\n\n  function getLabel() {\n    return key.replace(\"_\", \" \");\n  }\n\n  function getTruncatedValue() {\n    return JSON.stringify($json[key]).replace(/[{}\"]/g, \"\");\n  }\n\n  function handleChange(key) {\n    $openField = key;\n  }\n\n  function handleSelect(_key) {\n    $json[key][_key] = selectedValue[_key];\n  }\n</script>\n\n<style type=\"text/scss\">input {\n  margin: 0.5rem 0 0; }\n\n.truncate {\n  display: block;\n  max-width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n  margin-bottom: 0;\n  padding-left: 0; }\n\n.close {\n  padding-left: 0;\n  margin-bottom: 0; }\n\nul {\n  list-style: none; }\n\n/*# sourceMappingURL=EditableObjectList.svelte.css.map */</style>\n\n{#if !open}\n  <button class=\"truncate button-primary-text\" on:click={() => handleChange(key)}>\n    <label>{getLabel()}</label>\n    : {getTruncatedValue()}\n  </button>\n{:else}\n  <fieldset>\n    <button\n      class=\"truncate button-primary-text\"\n      on:click={() => ($openField = null)}>\n      <label>{key}</label>\n    </button>\n    <ul>\n      {#each Object.keys($json[key]) as _key, i}\n        <li>\n          <label for={`input_text_${_key}`}>{_key}</label>\n          {#if selectors}\n            <select\n              bind:value={selectedValue[_key]}\n              on:change={() => handleSelect(_key)}>\n              {#each selectors[_key] as selectable}\n                <option\n                  selected={selectable === $json[key][_key]}\n                  value={selectable}>\n                  {selectable}\n                </option>\n              {/each}\n            </select>\n          {:else}\n            <input\n              type=\"text\"\n              id={`input_text_${_key}`}\n              bind:value={$json[key][_key]}\n              class=\"\" />\n          {/if}\n        </li>\n      {/each}\n    </ul>\n    <button\n      class=\"close button-primary-text\"\n      on:click={() => ($openField = null)}>\n      Close\n    </button>\n  </fieldset>\n{/if}\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { json, openField } from \"./stores.js\";\n\n  export let key;\n  export let open = false;\n\n  $: open = $openField === key;\n\n  function getLabel() {\n    return key.replace(\"_\", \" \");\n  }\n\n  function handleChange(key) {\n    $openField = key;\n  }\n</script>\n\n<style type=\"text/scss\">.truncate {\n  display: block;\n  max-width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n  margin-bottom: 0;\n  padding-left: 0; }\n\ninput {\n  margin-bottom: 0.5rem; }\n\n.close {\n  padding-left: 0;\n  margin-bottom: 0; }\n\n/*# sourceMappingURL=EditableTextLine.svelte.css.map */</style>\n\n{#if !open}\n  <button\n    class=\"truncate button-primary-text\"\n    on:click={() => handleChange(key)}>\n    <label>{getLabel()}</label>\n    : {$json[key]}\n  </button>\n{:else}\n  <fieldset>\n    <button\n      class=\"truncate button-primary-text\"\n      on:click={() => ($openField = null)}>\n      <label for={`input_text_${key}`}>{key}</label>\n    </button>\n    <input\n      type=\"text\"\n      id={`input_text_${key}`}\n      name={key}\n      bind:value={$json[key]}\n      class=\"\" />\n    <button\n      class=\"close button-primary-text\"\n      on:click={() => ($openField = null)}>\n      Close\n    </button>\n\n  </fieldset>\n{/if}\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { json, openField } from \"./stores.js\";\n\n  export let key;\n  export let open = false;\n\n  $: open = $openField === key;\n\n  function getLabel() {\n    return key.replace(\"_\", \" \");\n  }\n\n  function handleDelete(i) {\n    $json[key] = $json[key].slice(0, i).concat($json[key].slice(i + 1));\n  }\n\n  function handleChange(key) {\n    $openField = key;\n  }\n\n  function handleAdd() {\n    $json[key] = [...$json[key], \"\"];\n  }\n</script>\n\n<style type=\"text/scss\">.truncate {\n  display: block;\n  max-width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n  margin-bottom: 0;\n  padding-left: 0; }\n\ninput {\n  margin: 0.5rem 0 0; }\n\n.close {\n  padding-left: 0;\n  margin-bottom: 0; }\n\nul {\n  list-style: none; }\n\nli {\n  display: flex; }\n\nli input {\n  flex: 1 1 auto; }\n\nli button {\n  margin: 0.5rem 0 0;\n  white-space: nowrap; }\n\n/*# sourceMappingURL=EditableTextList.svelte.css.map */</style>\n\n{#if !open}\n  <button\n    class=\"truncate button-primary-text\"\n    on:click={() => handleChange(key)}>\n    <label>{getLabel()}</label>\n    : {$json[key]}\n  </button>\n{:else}\n  <fieldset>\n    <button\n      class=\"truncate button-primary-text\"\n      on:click={() => ($openField = null)}>\n      <label for={`input_text_${key}`}>{key}</label>\n    </button>\n    <ul>\n      {#each $json[key] as name, i}\n        <li>\n          <input\n            type=\"text\"\n            id={`input_text_${name}`}\n            bind:value={name}\n            class=\"\" />\n          <button\n            type=\"button\"\n            class=\"button-primary-text\"\n            on:click={() => handleDelete(i)}>\n            -\n          </button>\n        </li>\n      {/each}\n    </ul>\n    <button type=\"button\" on:click={handleAdd}>+ Add name</button>\n    <button\n      class=\"close button-primary-text\"\n      on:click={() => ($openField = null)}>\n      Close\n    </button>\n  </fieldset>\n{/if}\n"
  ],
  "names": [],
  "mappings": "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"
}